{"version":3,"sources":["drop.svg","components/Forecast.js","components/CurrentWeather.js","components/SearchBar.js","components/weather.js","App.js","serviceWorker.js","index.js","find.svg"],"names":["module","exports","__webpack_require__","p","Forecast","date","split","_this","this","forecast","props","react_default","a","createElement","className","map","index","day","extractDate","dt_txt","key","id","Math","round","main","temp","weather","description","temp_min","unit","humidity","Component","Current","_openModal","currentWeather","city","onClick","src","require","alt","SearchBar","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_onchange","e","setState","target","value","search","searchAnimation","state","anime","targets","easing","duration","opacity","delay","stagger","_this2","timeline","add","width","fill","translateY","translateX","background","complete","onCityChosen","type","placeholder","name","onChange","ref","cityInput","xmlns","viewBox","data-name","cx","cy","r","x1","y1","x2","y2","d","Weather","_onOpenModal","modal","_onCityChosen","chosen_city","getWeatherData","toggleUnits","units","reverse","photo","owner","lon","lat","fetch","concat","process","then","res","json","data","stat","photos","floor","random","length","response","size","window","innerWidth","sizes","photoSource","source","ownername","catch","err","console","log","_this3","queryUnit","getPhoto","coord","error","forecastArray","i","list","push","components_SearchBar","photoSrc","photoOwner","data-owner","style","backgroundImage","components_Forecast","CurrentWeather_Current","renderModal","App","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0012a79d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/drop.fb0a9409.svg\";","import React, { Component } from 'react';\r\n\r\nclass Forecast extends Component {\r\n    extractDate(date){\r\n        return date.split(' ')[0].split('-');\r\n    }\r\n    render() \r\n    {\r\n        const forecast = this.props.forecast\r\n        return (\r\n            <ul className=\"forecast\">\r\n                {\r\n                    forecast.map((forecast, index)=>{\r\n                    const day      = this.extractDate(forecast.dt_txt)\r\n\r\n                    return <li key={index} className=\"forecast_day\">\r\n                            <div id=\"date\">{day[2]+'/'+day[1]}</div>\r\n                            <div id=\"temp\"><span>{Math.round(forecast.main.temp)} </span></div>                    \r\n                            <div id=\"weather-description\">{forecast.weather[0].description} </div>\r\n                            <div id=\"lower-temp\">&#8600; {Math.round(forecast.main.temp_min)} {this.props.unit}</div>\r\n                            <div id=\"humidity\">H: {forecast.main.humidity} %</div>\r\n                        </li>\r\n                    })\r\n                }\r\n            </ul>\r\n        )\r\n    }   \r\n}\r\nexport default Forecast;\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Current extends Component {\r\n  _openModal = () => {\r\n    this.props._openModal()\r\n  }\r\n  render(){\r\n    const currentWeather = this.props.currentWeather\r\n    const city           = this.props.city\r\n    const unit           = this.props.unit\r\n    \r\n    const temp = currentWeather.main ? Math.round(currentWeather.main.temp) :'0' \r\n    const temp_min = currentWeather.main ? currentWeather.main.temp_min :'0' \r\n    const humidity = currentWeather.main ? currentWeather.main.humidity :'0' \r\n\r\n    return (\r\n      <div className=\"current-weather\">\r\n        <div id=\"city\">{city}<span onClick={this._openModal}><img src={require('../find.svg')} alt=\"search icon\"/></span></div>\r\n        <div className=\"current-weather-wrapper\">\r\n          <div id=\"temp-min\">&#8600; {temp_min}{unit}</div>\r\n          <div id=\"humidity\"><span><img src={require('../drop.svg')} alt=\"humidity icon\"/></span> {humidity}%H</div>\r\n          <div id=\"temp\">{temp}{unit}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport anime from 'animejs'\r\nclass SearchBar extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            city: '',\r\n        }\r\n    }\r\n    componentDidMount()\r\n    {\r\n        anime({\r\n            targets: ['#modal','#modal input', '#modal span'],\r\n            easing: 'easeInOutSine',\r\n            duration: 300,\r\n            opacity: [0.5,1],\r\n            delay: anime.stagger(100),\r\n        })\r\n    }\r\n    // change city name\r\n    _onchange = (e) => {\r\n        this.setState({\r\n            city: e.target.value\r\n        })\r\n    }\r\n    searchAnimation()\r\n    {\r\n        // return the chosen city name to the parent \r\n        const goBack = () => {\r\n            return this.props.onCityChosen(this.state.city)\r\n        }\r\n        // Animation sequence of the weather icon\r\n        anime.timeline({easing: 'easeInOutSine'})\r\n        .add({\r\n            targets: '#modal input',\r\n            duration: 150,\r\n            width: 0\r\n        })\r\n        .add({\r\n            targets: '#modal img',\r\n            opacity: 0,\r\n            duration: 150,\r\n        })\r\n        .add({\r\n            targets: '#modal svg .cls-1',\r\n            opacity: [0,1],\r\n            fill: ['rgba(0,0,0,0)' , '#fbed63'],\r\n            translateY: ['+30',0],\r\n            delay: 150,\r\n            duration: 500,\r\n        })\r\n        .add({\r\n            targets: '#modal svg .cls-3',\r\n            opacity: [0,1],\r\n            fill: ['rgba(0,0,0,0)' , '#fff'],\r\n            translateX: ['-30',0],\r\n            duration: 500,\r\n        })\r\n        .add({\r\n            targets: '#modal svg .cls-1',\r\n            opacity: 0,\r\n            duration: 500,\r\n        })\r\n        .add({\r\n            targets: '#modal svg .cls-3',\r\n            translateX: 30,\r\n            duration: 500,\r\n        })\r\n        .add({\r\n            targets: '#modal svg .cls-2',\r\n            translateY: ['-40',0],\r\n            opacity: 1,\r\n            duration: 500,\r\n        })\r\n        .add({\r\n            targets: '#modal',\r\n            duration: 350,\r\n            background: 'rgba(100,100,100,0)',\r\n            complete: ()=>{\r\n                // go back to parent component when animation completed\r\n                goBack()\r\n            }\r\n        })\r\n    }\r\n    search = (e) => {\r\n        this.searchAnimation()\r\n    }\r\n  render() {\r\n    return (\r\n      <div id=\"modal\">\r\n        {/* City name input field */}\r\n        <input  \r\n            type=\"text\" \r\n            placeholder=\"Show the weather of..\" \r\n            name=\"search-bar\" \r\n            onChange={this._onchange}     \r\n            ref={this.cityInput}\r\n        />\r\n        {/* Search Button */}\r\n        <span onClick={this.search}><img src={require('../find.svg')} alt=\"search icon\"/></span>\r\n        {/* Weather Icon */}\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 250 211.76\"><title>Weather</title><g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Sunny\"><circle className=\"cls-1\" cx=\"138.5\" cy=\"77.5\" r=\"77.5\"/><g id=\"Rain\"><line className=\"cls-2\" x1=\"53.01\" y1=\"180.99\" x2=\"85\" y2=\"149\"/><line className=\"cls-2\" x1=\"119.01\" y1=\"175.99\" x2=\"156.49\" y2=\"138.51\"/><line className=\"cls-2\" x1=\"164.01\" y1=\"185.99\" x2=\"201.49\" y2=\"148.51\"/><line className=\"cls-2\" x1=\"114.01\" y1=\"209.99\" x2=\"136.5\" y2=\"187.5\"/><line className=\"cls-2\" x1=\"73.01\" y1=\"202.99\" x2=\"95.5\" y2=\"180.5\"/></g><path className=\"cls-3\" d=\"M195,125.91a36.09,36.09,0,0,0-36.09-36.09,35.69,35.69,0,0,0-7.21.73,21.48,21.48,0,0,0-36.19-12.42,22.78,22.78,0,0,0-39.72-7.44A38,38,0,0,0,21.53,105a38.58,38.58,0,0,0,.78,7.72A24.68,24.68,0,0,0,24.06,162v0H163.34v-.28A36.09,36.09,0,0,0,195,125.91Z\"/></g></g></svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// <style>.cls-1{fill:#fbed63;}.cls-2{fill:#fff;}</style>\r\nexport default SearchBar;\r\n","import React, { Component } from 'react';\r\nimport Forecast from './Forecast';\r\nimport CurrentWeather from './CurrentWeather';\r\nimport SearchBar from './SearchBar';\r\nconst FLICKR_API_KEY = process.env.REACT_APP_FLICKR_KEY\r\nconst WEATHER_API_KEY = process.env.REACT_APP_WEATHER_KEY\r\nclass Weather extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            city: null,\r\n            forecast: [],\r\n            currentWeather: {},\r\n            photo: {\r\n                src: '',\r\n                owner: '',\r\n            },\r\n            unit: ['°C','°F'],\r\n            modal: true\r\n        }\r\n    }\r\n    initCity(city){\r\n        this.setState({city:city})\r\n        this.getWeatherData(city,this.state.unit[0]);\r\n    }\r\n    // Fetch Photo from Flickr API based on the coordinate\r\n    getPhoto(lon,lat){\r\n        fetch(`https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=${FLICKR_API_KEY}&format=json&nojsoncallback=1&lat=${lat}&lon=${lon}&extras=owner_name&per_page=200&sort=interestingness-desc`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.stat === 'ok'){\r\n                var photo = data.photos.photo[Math.floor(Math.random()*data.photos.photo.length)];\r\n                var id = photo.id;\r\n                fetch(`https://api.flickr.com/services/rest/?method=flickr.photos.getSizes&api_key=${FLICKR_API_KEY}&photo_id=${id}&format=json&nojsoncallback=1`)\r\n                .then(res => res.json()).then(response => {\r\n                    if(response.stat === 'ok'){\r\n\r\n                        // Get small size image for small screen \r\n                        const size = window.innerWidth <= 420 ? response.sizes.size.length - 6 : response.sizes.size.length - 2// small size screen\r\n\r\n                        const url = response.sizes.size[size].source; \r\n                        const photoSource = {src: url, owner: photo.ownername}\r\n                        this.setState({photo: photoSource})\r\n                   } \r\n                }).catch(err=>{\r\n                    console.log(err);  \r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    // get weather from OpenWEather API base on the city name and unit\r\n    getWeatherData (city,unit){\r\n        var queryUnit = unit ==='°C' ? 'metric' : 'imperial';\r\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appId=${WEATHER_API_KEY}&units=${queryUnit}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            this.setState({\r\n                currentWeather: data\r\n            })\r\n            // Get photo of the coordinate\r\n            this.getPhoto(data.coord.lon,data.coord.lat);\r\n        }).catch(error=>{\r\n            this.setState({city: 'city not found'})\r\n        })     \r\n        fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appId=${WEATHER_API_KEY}&units=${queryUnit}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            var forecastArray = [];\r\n            var step = 8; // get the forecast at the same hour\r\n            for(var i=0 ;i<data.list.length; i+=step){\r\n                forecastArray.push(data.list[i]);\r\n            }\r\n            this.setState({\r\n                forecast: forecastArray\r\n            })\r\n        })\r\n        .catch(error=>{\r\n            this.setState({city: 'city not found'})\r\n        })     \r\n    }\r\n    // Toggle City choosing panel\r\n    _onOpenModal = () => {\r\n        this.setState({\r\n            modal: true\r\n        })\r\n    }\r\n    // On city changed \r\n    _onCityChosen = (chosen_city) => {\r\n        this.setState({\r\n            modal: false,\r\n            city : chosen_city\r\n        })\r\n        this.getWeatherData(chosen_city,this.state.unit[0]);\r\n    }\r\n\r\n    // On unit changed\r\n    toggleUnits = (e) => {\r\n        var units = this.state.unit.reverse();\r\n        this.setState({unit: units});\r\n        this.getWeatherData(this.state.city,this.state.unit[0])\r\n    }\r\n    // Render modal function\r\n    renderModal()\r\n    {\r\n        if(this.state.modal)\r\n        return <SearchBar onCityChosen={this._onCityChosen}></SearchBar>   \r\n    }\r\n    // Render method of the weather component\r\n    render() {\r\n    \r\n        // States of background image  \r\n    var photoSrc   = this.state.photo.src\r\n    var photoOwner = this.state.photo.owner\r\n    \r\n      //   State of the forecast component\r\n    var forecast = this.state.forecast\r\n    var unit     = this.state.unit\r\n    \r\n    //   State of the current weather\r\n    var currentWeather = this.state.currentWeather\r\n    var city           = this.state.city\r\n    \r\n    return (\r\n        <div id=\"wrapper\"\r\n            data-owner={photoOwner}\r\n            style={{backgroundImage: `url(${photoSrc})`}} >\r\n\r\n            {/* The information section contains the weather info */}\r\n            <div id=\"information\">\r\n                {/* 5-day forecast component */}\r\n                <Forecast forecast= {forecast}/>\r\n\r\n                {/* Current weather component */}\r\n                <CurrentWeather \r\n                    unit = {unit[0]}\r\n                    currentWeather = {currentWeather}\r\n                    city = {city}\r\n                    _openModal = {this._onOpenModal} />\r\n            </div>\r\n\r\n            {/* Choosing unit button */}\r\n            <p className=\"unit\" onClick={this.toggleUnits}>{unit[0]}</p>\r\n\r\n            {/* Choossing city Modal */\r\n                this.renderModal()\r\n            }\r\n            \r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Weather;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Weather from './components/weather';\nclass App extends Component {\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <Weather />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/find.40f00d6e.svg\";"],"sourceRoot":""}